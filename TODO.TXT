
-add random solving to component
    if able, evaluate halting steps
    else generate the list of allowable operations and perform one at random
    else done


-only one package can be "open" at a time; eg this is illegal:

    A::
    B::
    ::A
    ::B

-TEST

-finish display, thoughts about how it might look below:



    (Lx.xy(yxx(Lx.xx)))(Lz.z)A
    ^~~~~~~~~~~~~~~~~~~^~~~~~   

    h       help


/////////////////////////////////////////////////////////




file    help    about
^       ^       ^

    (Lx.xy(yxx(Lx.xx)))(Lz.z)A
                             ^

    h       toggle help
    [       undo
    {       undo to beginning
    ]       redo
    }       redo to end
    →       cycle options forward
    ←       cycle options backward
    enter   take step
    s       take step
    a       expand all variable names recursively
    c       run until expression is fully evaluated (space to interrupt)
    C       run until program is fully evaluated (space to interrupt)
    e       run evaluating only expression known to halt (space to interrupt)
    d       end execution of the expression, continue to the next
    D       end execution of the expression, search previous by name
    z       toggle textwrap
    q       clear the current context, prompt to load new file
    Q       exit the program
    
