add support for global_package
    automatically adopt global of parent component when adding
    packages have reverse lookup info
        knows it's global_package
        knows it's name
    ids have reverse lookup info
        knows it's package (so by extension it's global package and package name)
        knows it's name
    each global_package has lambda,expr,bound,global
        when adding convert lambda,expr,bound,global to applicable one in new global_package
        when adding convert a package to a package of the same name in new global_package (create if non-existant)
    packages have field LAMBDA,EXPR,BOUND,GLOBAL,PACKAGE
        only PACKAGE has members, all others are dummies
    may create a component without specific package and use dummies as normal
        ideally should not stay in that state, avoid changing
    scope will be raw pointer to package
    
add random solving to component
    try evaluate halting steps
    else generate the list of allowable operations and perform one at random
    else done



finish display, thoughts about how it might look below



    (Lx.xy(yxx(Lx.xx)))(Lz.z)A
    ^~~~~~~~~~~~~~~~~~~^~~~~~   

    h       help

    








file    help    about
^       ^       ^

    (Lx.xy(yxx(Lx.xx)))(Lz.z)A
                             ^

    h       toggle help
    [       undo
    {       undo to beginning
    ]       redo
    }       redo to end
    →       cycle options forward
    ←       cycle options backward
    enter   take step
    s       take step
    a       expand all variable names recursively
    c       run until expression is fully evaluated (space to interrupt)
    C       run until program is fully evaluated (space to interrupt)
    e       run evaluating only expression known to halt (space to interrupt)
    d       end execution of the expression, continue to the next
    D       end execution of the expression, search previous by name
    z       toggle textwrap
    q       clear the current context, prompt to load new file
    Q       exit the program
    
