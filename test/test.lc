boolean::

    T := Lxy.x
    F := Lxy.y
    
    & := Lxy.xyF
    | := Lxy.xTy
    ~ := Lxy.xFT
    
::boolean

;::  comment begin

this is a block comment
it spans multiple lines

        comment end   ::;

natural::
    0 := Lsz.z
    S := Lwyx.y(wyx)
    ; # ...= S(#-1) ; valid statement but not yet supported

    1 := S0
    2 := S1
    3 := S2
    4 := S3


    `0? := Lx.x(TF)T
    ; `0?(0) = (Lx.x(TF)T)(Lsz.z) = (Lsz.z)(TF)T = T
    ; `0?(1) = (Lx.x(TF)T)(Lsz.s(z)) = (Lsz.s(z))(TF)T = TFT = F
    ; `0?(n>0) = F

    `Phi := Lpz.z(S(pT))(pT)
    P := Ln.n`Phi(Lz.z00)F

    + := Lab.aSb
    * := Lab.ab
    ^ := Lab.b(*a)1

    `Successor := S
    `Predecessor := P

0
1
2
3
4
S
4S4

::natural

